/*----------------------------------------------------- 
 Natronomonas pharaonis halorhodopsin (NpHR) 3-state model 
 in dendrites 
 ------------------------------------------------------*/

// --------------------------------------------------
//    Parameter Settings
// --------------------------------------------------
//HRexp = 5e-4 //  HR expression density   
// del_light = 650    // delay time before light ON
//t_on = 300  // ms
//t_off = 350
//n_pulses = 1
//tstop = 450
//pd = 10  // mW/mm2  light intensity

//v_init = -65

print "NpHR_soma"
objref HaloR_soma
//  Apical dendrites stimulation

// parameters for the pump are: e1, k20, k3dark, k3light
   e1 = 0.002   // (1/ms)
   k20 = 0.14  // this corresponds to tau_off=7ms in Zhang2007 paper
   k3dark = 0.1
   k3light = 0.02
   gpump = 0.001   // conductance of the pump

proc NpHR_in_soma () {

    HRexp = $1
    pd = $2         // 10 mW/mm^2
    del_light = $3  // 650 ms  delay time before light ON
    t_on = $4       // 300 ms  
    t_off = $5
    expdist = $6    // distance of expression 
    n_pulses = $7
    
    HaloR_soma = new List()
    HRsoma=HRexp  
  i=0
  //print "HaloR_soma"
  //print "HaloR distribution [index, section, segment, area, gbar, distance]:"  
  
  for k=0,0 {
      L5PC.soma[k] {     
          for(x,0){
		//if(distance(x)<expdist){
                  HaloR_soma.append(new NpHR(x))  
                  HaloR_soma.o(i).gbar= HRsoma*area(x) 
                  HaloR_soma.o(i).Er=pd         
                  HaloR_soma.o(i).delay=del_light
		          HaloR_soma.o(i).pulsewidth=t_on        
                  HaloR_soma.o(i).interpulse_interval=t_off      
                  HaloR_soma.o(i).n_pulses=n_pulses                    
                  HaloR_soma.o(i).e1=e1            
                  HaloR_soma.o(i).k20=k20            
		  HaloR_soma.o(i).k3dark=k3dark 
		  HaloR_soma.o(i).k3light=k3light 
                  HaloR_soma.o(i).gpump=gpump

//print i, secname()," ", HaloR_soma.o(i).get_loc, area(x), HaloR_soma.o(i).gbar, distance(x)
                  areatot  += area(x)           
                  gbartot  += HaloR_soma.o(i).gbar 
                  i=i+1      
		 //}
                }
              }
  }
print "Number of segments populated: ",i, " Total area: ", areatot, " Total HR gbar: ", gbartot
}


